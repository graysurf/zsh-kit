#compdef git-lock

__git_lock_labels() {
  typeset repo_id lock_dir
  repo_id=$(basename "$(git rev-parse --show-toplevel 2>/dev/null)" 2>/dev/null)
  lock_dir="$ZSH_CACHE_DIR/git-locks"

  [[ -d "$lock_dir" ]] || return

  for file in "$lock_dir/${repo_id}-"*.lock(N); do
    [[ -f "$file" ]] || continue
    basename "$file" | sed "s/^${repo_id}-//;s/\.lock$//"
  done
}


_git-lock() {
  _arguments -s -C \
    '1:command:((lock\:Save\ commit\ hash\ to\ lock \
                 unlock\:Reset\ to\ a\ saved\ commit \
                 list\:Show\ all\ locks \
                 copy\:Duplicate\ a\ lock\ label \
                 delete\:Remove\ a\ lock \
                 diff\:Compare\ two\ locks \
                 tag\:Create\ a\ tag\ from\ a\ lock))' \
    '*::args:->args'

  case $words[2] in
    unlock|delete)
      _values 'label' $(__git_lock_labels)
      ;;
    copy)
      if (( CURRENT == 3 )); then
        _values 'source label' $(__git_lock_labels)
      elif (( CURRENT == 4 )); then
        _message 'target label'
      fi
      ;;
    diff)
      if (( CURRENT == 3 || CURRENT == 4 )); then
        _values 'label' $(__git_lock_labels)
      fi
      ;;
    tag)
      if (( CURRENT == 3 )); then
        _values 'git-lock label' $(__git_lock_labels)
      elif (( CURRENT == 4 )); then
        _message 'git tag name'
      elif [[ $words[CURRENT-1] == "-m" ]]; then
        _message 'tag message'
      fi
      ;;
  esac
}

compdef _git-lock git-lock
compdef _git-lock 'git-lock.git'

